import OpenAI from 'openai';

export class PhotoAnalyzer {
    constructor(db, openaiApiKey) {
        this.db = db;
        this.openai = new OpenAI({
            apiKey: openaiApiKey
        });

        this.initDatabase();
    }

    initDatabase() {
        this.db.exec(`
            CREATE TABLE IF NOT EXISTS photo_analysis (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                telegram_id INTEGER NOT NULL,
                analysis_date DATETIME DEFAULT CURRENT_TIMESTAMP,
                analysis_result TEXT
            )
        `);
    }

    checkAnalysisLimit(userId) {
        const result = this.db.prepare(`
            SELECT COUNT(*) as count 
            FROM photo_analysis 
            WHERE telegram_id = ?
        `).get(userId);

        return result.count < 4;
    }

    recordAnalysis(userId, analysisResult) {
        this.db.prepare(`
            INSERT INTO photo_analysis (telegram_id, analysis_result)
            VALUES (?, ?)
        `).run(userId, analysisResult);
    }

    async analyzePhoto(photoUrl) {
        try {
            const response = await this.openai.chat.completions.create({
                model: "gpt-4o-mini",
                messages: [
                    {
                        role: "user",
                        content: [
                            {
                                type: "text",
                                text: `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ª–∏—Ü–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

1. –û—Å–Ω–æ–≤–Ω–æ–π —Ç–∏–ø —Å—Ç–∞—Ä–µ–Ω–∏—è:
- –ö–∞–∫–æ–π –∏–∑ —Ç–∏–ø–æ–≤ –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç: –Ω–∞–∑–∞–ª—å–Ω—ã–π (–ø—Ä–æ–±–ª–µ–º—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –Ω–æ—Å–∞), –¥–µ–Ω—Ç–∞–ª—å–Ω—ã–π (–ø—Ä–æ–±–ª–µ–º—ã —Å –∑—É–±–æ—á–µ–ª—é—Å—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π) –∏–ª–∏ –æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π (–ø—Ä–æ–±–ª–µ–º—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –≥–ª–∞–∑)
- –û–±–æ—Å–Ω—É–π —Å–≤–æ–π –≤—ã–±–æ—Ä

2. –ü—Ä–∏–∑–Ω–∞–∫–∏ —Å—Ç–∞—Ä–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–∂–∏:
- –ú–æ—Ä—â–∏–Ω—ã (–≥–¥–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã, –≥–ª—É–±–∏–Ω–∞)
- –ù–æ—Å–æ–≥—É–±–Ω—ã–µ —Å–∫–ª–∞–¥–∫–∏
- –û–≤–∞–ª –ª–∏—Ü–∞
- –¢–µ–∫—Å—Ç—É—Ä–∞ –∏ —Ç–æ–Ω –∫–æ–∂–∏
- –ü–∏–≥–º–µ–Ω—Ç–∞—Ü–∏—è
- –î—Ä—É–≥–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

3. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º:
- 2-3 –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º –∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–∞
- –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫. –û–±—ä–µ–º –∞–Ω–∞–ª–∏–∑–∞ - –ø—Ä–∏–º–µ—Ä–Ω–æ 200-250 —Å–ª–æ–≤.`
                            },
                            {
                                type: "image_url",
                                image_url: {
                                    url: photoUrl
                                }                            }
                        ]
                    }
                ],
                max_tokens: 1000,
                temperature: 0.7
            });

            return response.choices[0].message.content;
        } catch (error) {
            console.error('Error analyzing photo:', error);
            throw error;
        }
    }
}

export const setupPhotoAnalysis = (bot, db, openaiApiKey, checkSubscription) => {
    const analyzer = new PhotoAnalyzer(db, openaiApiKey);
    const userStates = new Map();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ
    bot.on('message', async (msg) => {
        if (msg.text !== 'üì∏ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ') return;

        const chatId = msg.chat.id;
        const isSubscribed = await checkSubscription(chatId);

        if (!isSubscribed) {
            bot.sendMessage(chatId, '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.');
            return;
        }

        if (!analyzer.checkAnalysisLimit(chatId)) {
            bot.sendMessage(chatId, '–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–æ–≤ (4). –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –∑–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø—Ä–∏–µ–º.');
            return;
        }

        await bot.sendPhoto(chatId, 'https://static.tildacdn.com/tild3838-6165-4735-b931-636266363865/example.jpeg', {
            caption: `
ü§ñ –ù–∞—à –ò–ò –º–æ–∂–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–µ –ª–∏—Ü–æ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å:
- –¢–∏–ø —Å—Ç–∞—Ä–µ–Ω–∏—è
- –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–∂–∏
- –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã

üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤–∞—à–µ–≥–æ –ª–∏—Ü–∞ –∫–∞–∫ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –≤—ã—à–µ:
- –ü—Ä–∏ —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏
- –ê–Ω—Ñ–∞—Å (–ø—Ä—è–º–æ)
- –ë–µ–∑ –º–∞–∫–∏—è–∂–∞
- –ë–µ–∑ –æ—á–∫–æ–≤`
        });

        userStates.set(chatId, 'waitingForPhoto');
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ
    bot.on('photo', async (msg) => {
        const chatId = msg.chat.id;

        if (userStates.get(chatId) !== 'waitingForPhoto') {
            return;
        }

        try {
            const photo = msg.photo[msg.photo.length - 1];
            const fileLink = await bot.getFileLink(photo.file_id);

            await bot.sendMessage(chatId, 'üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à–µ —Ñ–æ—Ç–æ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.');

            const analysis = await analyzer.analyzePhoto(fileLink);
            analyzer.recordAnalysis(chatId, analysis);

            await bot.sendMessage(chatId, analysis, { parse_mode: 'Markdown' });

            await bot.sendMessage(chatId, `
üìû –•–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –Ω–∞—à–∏–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏?

–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:
‚òéÔ∏è <a href="tel:+79266568808">–ü–æ–∑–≤–æ–Ω–∏—Ç—å</a>
üí¨ <a href="https://api.whatsapp.com/send?phone=79266568808">–ù–∞–ø–∏—Å–∞—Ç—å –≤ WhatsApp</a>
`, { parse_mode: 'HTML' });

        } catch (error) {
            console.error('Error processing photo:', error);
            bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.');
        } finally {
            userStates.delete(chatId);
        }
    });
};